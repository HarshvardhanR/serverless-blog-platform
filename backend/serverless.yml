service: blog-platform

provider:
  name: aws
  runtime: nodejs18.x
  region: ca-central-1
  environment:
    USER_TABLE: ${env:USER_TABLE}
    POST_TABLE: ${env:POST_TABLE}
    COMMENT_TABLE: ${env:COMMENT_TABLE}
    JWT_SECRET: ${env:JWT_SECRET}

  httpApi:
    cors:
      allowedOrigins:
        - '*'       # allow all origins for dev; change to your frontend in prod
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - OPTIONS
        - GET
        - POST
        - PUT
        - DELETE
      allowCredentials: false   # optional, only needed if you use cookies/auth

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:ca-central-1:*:table/${env:USER_TABLE}
            - arn:aws:dynamodb:ca-central-1:*:table/${env:POST_TABLE}
            - arn:aws:dynamodb:ca-central-1:*:table/${env:COMMENT_TABLE}
            - arn:aws:dynamodb:ca-central-1:*:table/${env:USER_TABLE}/index/*
            - arn:aws:dynamodb:ca-central-1:*:table/${env:POST_TABLE}/index/*
            - arn:aws:dynamodb:ca-central-1:*:table/${env:COMMENT_TABLE}/index/*

functions:
  register:
    handler: auth.register
    events:
      - httpApi:
          path: /auth/register
          method: post

  login:
    handler: auth.login
    events:
      - httpApi:
          path: /auth/login
          method: post

  createPost:
    handler: posts.createPost
    events:
      - httpApi:
          path: /posts
          method: post

  createComment:
    handler: comments.createComment
    events:
      - httpApi:
          path: /comments
          method: post

  getPosts:
    handler: posts.getPosts
    events:
      - httpApi:
          path: /posts
          method: get

  getUserPosts:
    handler: posts.getUserPosts
    events:
      - httpApi:
          path: /posts/me
          method: get

  getComments:
    handler: comments.getComments
    events:
      - httpApi:
          path: /comments
          method: get

  getUserComments:
    handler: comments.getUserComments
    events:
      - httpApi:
          path: /comments/me
          method: get

  getPostComments:
    handler: comments.getPostComments
    events:
      - httpApi:
          path: /comments/post/{postId}
          method: get

  getPostById:
    handler: posts.getPostById
    events:
      - httpApi:
          path: /posts/{postId}
          method: get


plugins:
  - serverless-dotenv-plugin

custom:
  dotenv:
    path: .env
