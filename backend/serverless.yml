service: blog-platform

provider:
  name: aws
  runtime: nodejs18.x
  region: ca-central-1
  environment:
    USER_TABLE: ${env:USER_TABLE}
    POST_TABLE: ${env:POST_TABLE}
    COMMENT_TABLE: ${env:COMMENT_TABLE}
    JWT_SECRET: ${env:JWT_SECRET}
    POST_IMAGES_BUCKET: ${self:custom.postImagesBucket}

  httpApi:
    cors:
      allowedOrigins:
        - '*'
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - OPTIONS
        - GET
        - POST
        - PUT
        - DELETE
      allowCredentials: false

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:ca-central-1:*:table/${env:USER_TABLE}
            - arn:aws:dynamodb:ca-central-1:*:table/${env:POST_TABLE}
            - arn:aws:dynamodb:ca-central-1:*:table/${env:COMMENT_TABLE}
            - arn:aws:dynamodb:ca-central-1:*:table/${env:USER_TABLE}/index/*
            - arn:aws:dynamodb:ca-central-1:*:table/${env:POST_TABLE}/index/*
            - arn:aws:dynamodb:ca-central-1:*:table/${env:COMMENT_TABLE}/index/*
        
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource:
            - arn:aws:s3:::${self:custom.postImagesBucket}/*
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:custom.postImagesBucket}

functions:

  me:
    handler: auth.me
    events:
      - httpApi:
          path: /auth/me
          method: get

  updateMe:
    handler: auth.updateMe
    events:
      - httpApi:
          path: /auth/me
          method: put

  getProfileUploadUrl:
    handler: profile.getProfileUploadUrl
    events:
      - httpApi:
          path: /auth/profile/upload-url
          method: get

  register:
    handler: auth.register
    events:
      - httpApi:
          path: /auth/register
          method: post

  login:
    handler: auth.login
    events:
      - httpApi:
          path: /auth/login
          method: post

  createPost:
    handler: posts.createPost
    events:
      - httpApi:
          path: /posts
          method: post

  createComment:
    handler: comments.createComment
    events:
      - httpApi:
          path: /comments
          method: post

  getPosts:
    handler: posts.getPosts
    events:
      - httpApi:
          path: /posts
          method: get

  getUserPosts:
    handler: posts.getUserPosts
    events:
      - httpApi:
          path: /posts/me
          method: get

  getComments:
    handler: comments.getComments
    events:
      - httpApi:
          path: /comments
          method: get

  getUserComments:
    handler: comments.getUserComments
    events:
      - httpApi:
          path: /comments/me
          method: get

  getPostComments:
    handler: comments.getPostComments
    events:
      - httpApi:
          path: /comments/post/{postId}
          method: get

  updateComment:
    handler: comments.updateComment
    events:
      - httpApi:
          path: /comments/{commentId}
          method: put

  deleteComment:
    handler: comments.deleteComment
    events:
      - httpApi:
          path: /comments/{commentId}
          method: delete

  getPostById:
    handler: posts.getPostById
    events:
      - httpApi:
          path: /posts/{postId}
          method: get

  getUploadUrl:
    handler: posts.getUploadUrl
    events:
      - httpApi:
          path: /posts/upload-url
          method: post

resources:
  Resources:
    PostImagesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.postImagesBucket}
        AccessControl: Private
        VersioningConfiguration:
          Status: Enabled
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*' 
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
              MaxAge: 3000

plugins:
  - serverless-dotenv-plugin

custom:
  dotenv:
    path: .env
  postImagesBucket: blog-platform-post-images-${sls:stage}
